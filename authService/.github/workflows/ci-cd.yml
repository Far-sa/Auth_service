name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: ${{ secrets.DB_USERNAME }} #postgres
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }} #password
          POSTGRES_DB: ${{ secrets.DB_NAME }} #auth_db
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
          - 15672:15672
        options: >-
          --health-cmd "rabbitmqctl status"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Cache Go modules
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      run: go mod download

    - name: Build
      run: go build -o auth-service cmd/main.go

    - name: Run tests
      env:
        DATABASE_URL: postgres://${{ secrets.DB_USERNAME }}:${{ secrets.DB_PASSWORD }}@localhost:5432/${{ secrets.DB_NAME }}?sslmode=disable
        #? DATABASE_URL: postgres://postgres:password@localhost:5432/auth_db?sslmode=disable
        RABBITMQ_URL: amqp://guest:guest@localhost:5672/
      run: go test ./...

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        context: .
        file: Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/auth-service:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Pull Docker image
      run: docker pull ${{ secrets.DOCKER_USERNAME }}/auth-service:latest

    - name: Set up Docker Compose
      run: |
        docker-compose down
        docker-compose up -d




#! kubernetes
# name: CI/CD Pipeline

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     services:
#       postgres:
#         image: postgres:13
#         ports:
#           - 5432:5432
#         env:
#           POSTGRES_USER: ${{ secrets.DB_USERNAME }}
#           POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
#           POSTGRES_DB: ${{ secrets.DB_NAME }}
#         options: >-
#           --health-cmd "pg_isready -U ${{ secrets.DB_USERNAME }}"
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5

#       rabbitmq:
#         image: rabbitmq:3-management
#         ports:
#           - 5672:5672
#           - 15672:15672
#         options: >-
#           --health-cmd "rabbitmqctl status"
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up Go
#         uses: actions/setup-go@v3
#         with:
#           go-version: 1.19

#       - name: Cache Go modules
#         uses: actions/cache@v2
#         with:
#           path: |
#             ~/.cache/go-build
#             ~/go/pkg/mod
#           key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
#           restore-keys: |
#             ${{ runner.os }}-go-

#       - name: Install dependencies
#         run: go mod download

#       - name: Build
#         run: go build -o auth-service cmd/main.go

#       - name: Run tests
#         env:
#           DATABASE_URL: postgres://${{ secrets.DB_USERNAME }}:${{ secrets.DB_PASSWORD }}@${{ secrets.DB_HOST }}:5432/${{ secrets.DB_NAME }}?sslmode=disable
#           #?DATABASE_URL: postgres://postgres:password@localhost:5432/auth_db?sslmode=disable
#           RABBITMQ_URL: amqp://guest:guest@localhost:5672/

#         run: go test ./...

#       - name: Set up QEMU
#         uses: docker/setup-qemu-action@v2

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2

#       - name: Log in to DockerHub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: Build and push Docker image
#         uses: docker/build-push-action@v3
#         with:
#           context: .
#           file: Dockerfile
#           push: true
#           tags: ${{ secrets.DOCKER_USERNAME }}/auth-service:latest

#   deploy:
#     runs-on: ubuntu-latest
#     needs: build

#     steps:
#       - name: Deploy to Kubernetes
#         uses: azure/k8s-deploy@v3
#         with:
#           namespace: default
#           manifests: |
#             k8s/deployment.yaml
#             k8s/service.yaml
#           images: |
#             ${{ secrets.DOCKER_USERNAME }}/auth-service:latest
#           kubectl-version: "1.20.0"
